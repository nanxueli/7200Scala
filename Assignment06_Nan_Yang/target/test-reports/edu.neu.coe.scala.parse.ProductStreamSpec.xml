<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="YangNans-MacBook-Pro.local" name="edu.neu.coe.scala.parse.ProductStreamSpec" tests="17" errors="0" failures="0" time="0.315">
                     <properties>
      <property name="jline.esc.timeout" value="0"/><property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/><property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib"/><property name="java.vm.version" value="25.25-b02"/><property name="gopherProxySet" value="false"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="java.vendor.url" value="http://java.oracle.com/"/><property name="path.separator" value=":"/><property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/><property name="file.encoding.pkg" value="sun.io"/><property name="user.country" value="US"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="sun.os.patch.level" value="unknown"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="user.dir" value="/Users/yangnan/Documents/NEU/5th Semester/7200 BigData in Scala/Assignment06/Assignment06_Nan_Yang"/><property name="java.runtime.version" value="1.8.0_25-b17"/><property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment"/><property name="java.endorsed.dirs" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/endorsed"/><property name="os.arch" value="x86_64"/><property name="java.io.tmpdir" value="/var/folders/2p/lgd5p1cd0c92w286dh439q_c0000gn/T/"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="os.name" value="Mac OS X"/><property name="sun.jnu.encoding" value="UTF-8"/><property name="java.library.path" value="/Users/yangnan/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.class.version" value="52.0"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="os.version" value="10.11.1"/><property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="user.home" value="/Users/yangnan"/><property name="user.timezone" value="America/New_York"/><property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob"/><property name="file.encoding" value="UTF-8"/><property name="java.specification.version" value="1.8"/><property name="java.class.path" value="/usr/local/Cellar/sbt/0.13.9/libexec/sbt-launch.jar"/><property name="user.name" value="yangnan"/><property name="jline.shutdownhook" value="false"/><property name="java.vm.specification.version" value="1.8"/><property name="sun.java.command" value="/usr/local/Cellar/sbt/0.13.9/libexec/sbt-launch.jar test"/><property name="java.home" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre"/><property name="sun.arch.data.model" value="64"/><property name="user.language" value="en"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit"/><property name="java.vm.info" value="mixed mode"/><property name="java.version" value="1.8.0_25"/><property name="java.ext.dirs" value="/Users/yangnan/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java"/><property name="sun.boot.class.path" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre/classes"/><property name="java.vendor" value="Oracle Corporation"/><property name="file.separator" value="/"/><property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/><property name="sun.io.unicode.encoding" value="UnicodeBig"/><property name="sun.cpu.endian" value="little"/><property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="sun.cpu.isalist" value=""/>
    </properties>
                     <testcase classname="edu.neu.coe.scala.parse.ProductStreamSpec" name="&quot;Hello&quot;, &quot;World!&quot; should be (String) stream via CSV" time="0.257">
                                                 
                                               </testcase><testcase classname="edu.neu.coe.scala.parse.ProductStreamSpec" name="&quot;Hello&quot;, &quot;World!&quot; should be (String) stream via TupleStream" time="0.004">
                                                 
                                               </testcase><testcase classname="edu.neu.coe.scala.parse.ProductStreamSpec" name="&quot;Hello&quot;, &quot;World!&quot; should convert to list properly" time="0.003">
                                                 
                                               </testcase><testcase classname="edu.neu.coe.scala.parse.ProductStreamSpec" name="&quot;Hello&quot;, &quot;World!&quot; should convert to map properly" time="0.004">
                                                 
                                               </testcase><testcase classname="edu.neu.coe.scala.parse.ProductStreamSpec" name="&quot;Hello&quot;, &quot;World!&quot; should have column x of type String" time="0.004">
                                                 
                                               </testcase><testcase classname="edu.neu.coe.scala.parse.ProductStreamSpec" name="&quot;3,5&quot;, &quot;8,13&quot; should be (Int,Int) stream" time="0.002">
                                                 
                                               </testcase><testcase classname="edu.neu.coe.scala.parse.ProductStreamSpec" name="&quot;3,5&quot;, &quot;8,13&quot; should be (String,String) stream via TupleStream" time="0.001">
                                                 
                                               </testcase><testcase classname="edu.neu.coe.scala.parse.ProductStreamSpec" name="&quot;3,5&quot;, &quot;8,13&quot; should map into (Int,Int) via TupleStream" time="0.003">
                                                 
                                               </testcase><testcase classname="edu.neu.coe.scala.parse.ProductStreamSpec" name="&quot;3,5&quot;, &quot;8,13&quot; should have column y of type Int" time="0.003">
                                                 
                                               </testcase><testcase classname="edu.neu.coe.scala.parse.ProductStreamSpec" name="&quot;3,5&quot;, &quot;8,13&quot; should convert to map properly" time="0.005">
                                                 
                                               </testcase><testcase classname="edu.neu.coe.scala.parse.ProductStreamSpec" name="&quot;3,5&quot;, &quot;8,13&quot; should map into (Double,Double) properly" time="0.003">
                                                 
                                               </testcase><testcase classname="edu.neu.coe.scala.parse.ProductStreamSpec" name="&quot;3,5&quot;, &quot;8,13&quot; should convert into maps properly" time="0.002">
                                                 
                                               </testcase><testcase classname="edu.neu.coe.scala.parse.ProductStreamSpec" name="5&quot; should be (Int,Double) stream" time="0.002">
                                                 
                                               </testcase><testcase classname="edu.neu.coe.scala.parse.ProductStreamSpec" name="&quot;milestone 1, 2016-03-08&quot;, &quot;milestone 2, 2016-03-15&quot; should be (String,Datetime) stream" time="0.002">
                                                 
                                               </testcase><testcase classname="edu.neu.coe.scala.parse.ProductStreamSpec" name="csv should be (String,Int) stream" time="0.011">
                                                 
                                               </testcase><testcase classname="edu.neu.coe.scala.parse.ProductStreamSpec" name="csv should be (String,Int) stream using File" time="0.003">
                                                 
                                               </testcase><testcase classname="edu.neu.coe.scala.parse.ProductStreamSpec" name="csv should be (String,Int) stream using URI" time="0.006">
                                                 
                                               </testcase>
                     <system-out></system-out>
                     <system-err></system-err>
                   </testsuite>